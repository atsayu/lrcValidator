declare enum LineType {
    INVALID = "invalid",
    METADATA = "metadata",
    LYRIC = "lyric",
    ENHANCED_LYRIC = "enhanced_lyric"
}
interface Line {
    lineNumber: number;
    raw: string;
    type: LineType;
}
interface MetadataLine<MetadataKey extends string> extends Line {
    type: LineType.METADATA;
    key: MetadataKey;
    value: string;
}
interface LyricLine extends Line {
    type: LineType.LYRIC;
    startMillisecond: number;
    content: string;
}
interface InvalidLine extends Line {
    type: LineType.INVALID;
}
interface EnhancedWord {
    index: number;
    raw: string;
    startMillisecond: number;
    content: string;
}
interface EnhancedLyricLine extends Omit<LyricLine, 'type'> {
    type: LineType.ENHANCED_LYRIC;
    words: EnhancedWord[];
}

/**
 * parse lrc string
 * @author mebtte<hi@mebtte.com>
 */
declare function parse<MetadataKey extends string>(lrc: string): Array<InvalidLine | MetadataLine<MetadataKey> | LyricLine>;

declare function parseEnhanced<MetadataKey extends string>(lrc: string): Array<InvalidLine | MetadataLine<MetadataKey> | EnhancedLyricLine>;

export { type EnhancedLyricLine, type EnhancedWord, type Line, LineType, type LyricLine, type MetadataLine, parse, parseEnhanced };
